# Generated by Django 3.2.16 on 2023-11-08 19:05

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('accepted', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='Некорректные символы в юзернейме.', regex='^[\\w.@+-]+$'), django.core.validators.RegexValidator(message='Запрещенное значение для юзернейма.', regex='^(?i)(?!me$).*')], verbose_name='Никнейм')),
                ('mobile_phone', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Введите только цифры (11 символов).')], verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('father_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MedicamentsInOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SupportedСities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SupportedPharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=150)),
                ('in_the_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pharmacies', to='api.supportedсities')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_pacient', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('В ожидании', 'В ожидании'), ('В обработке', 'В обработке'), ('Выполнен', 'Выполнен')], default='В ожидании', max_length=20, verbose_name='Статус')),
                ('recipients_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[а-яА-Яa-zA-Z]+$', 'Введите только буквы.')])),
                ('recipients_snils', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Введите только цифры (11 символов).')])),
                ('recipients_phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'Введите только цифры (11 символов).')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('accepted_kod', models.SmallIntegerField(blank=True, null=True)),
                ('curier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('from_the_pharmacy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_from_the_pharmacy', to='api.supportedpharmacy')),
                ('medication', models.ManyToManyField(through='api.MedicamentsInOrders', to='api.Medication')),
            ],
        ),
        migrations.AddField(
            model_name='medicamentsinorders',
            name='medicament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_orders', to='api.medication'),
        ),
        migrations.AddField(
            model_name='medicamentsinorders',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_orders', to='api.order'),
        ),
        migrations.AddField(
            model_name='curier',
            name='work_in_city',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='api.supportedсities'),
        ),
    ]
